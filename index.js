// powered by OWNER CASEYRHODES 


"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
 if (k2 === undefined) k2 = k;
 var desc = Object.getOwnPropertyDescriptor(m, k);
 if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
 desc = { enumerable: true, get: function() { return m[k]; } };
 }
 Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
 if (k2 === undefined) k2 = k;
 o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
 Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
 o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
 if (mod && mod.__esModule) return mod;
 var result = {};
 if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
 __setModuleDefault(result, mod);
 return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
 return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const baileys_1 = __importStar(require("@whiskeysockets/baileys"));
const logger_1 = __importDefault(require("@whiskeysockets/baileys/lib/Utils/logger"));
const logger = logger_1.default.child({});
logger.level = 'silent';
const pino = require("pino");
const boom_1 = require("@hapi/boom");
const conf = require("./set");
const axios = require("axios");
let fs = require("fs-extra");
let path = require("path");
const FileType = require('file-type');
const { Sticker, createSticker, StickerTypes } = require('wa-sticker-formatter');
//import chalk from 'chalk'
const { verifierEtatJid , recupererActionJid } = require("./bdd/antilien");
const { atbverifierEtatJid , atbrecupererActionJid } = require("./bdd/antibot");
let evt = require(__dirname + "/framework/zokou");
const {isUserBanned , addUserToBanList , removeUserFromBanList} = require("./bdd/banUser");
const {addGroupToBanList,isGroupBanned,removeGroupFromBanList} = require("./bdd/banGroup");
const {isGroupOnlyAdmin,addGroupToOnlyAdminList,removeGroupFromOnlyAdminList} = require("./bdd/onlyAdmin");
//const //{loadCmd}=require("/framework/mesfonctions")
let { reagir } = require(__dirname + "/framework/app");
var session = conf.session.replace(/POPKID-MD;;;=>/g,"");
const prefixe = conf.PREFIXE;


async function authentification() {
 try {
 
 //console.log("le data "+data)
 if (!fs.existsSync(__dirname + "/auth/creds.json")) {
 console.log("connected successfully...");
 await fs.writeFileSync(__dirname + "/auth/creds.json", atob(session), "utf8");
 //console.log(session)
 }
 else if (fs.existsSync(__dirname + "/auth/creds.json") && session != "zokk") {
 await fs.writeFileSync(__dirname + "/auth/creds.json", atob(session), "utf8");
 }
 }
 catch (e) {
 console.log("Session Invalid " + e);
 return;
 }
}
authentification();
const store = (0, baileys_1.makeInMemoryStore)({
 logger: pino().child({ level: "silent", stream: "store" }),
});
setTimeout(() => {
 async function main() {
 const { version, isLatest } = await (0, baileys_1.fetchLatestBaileysVersion)();
 const { state, saveCreds } = await (0, baileys_1.useMultiFileAuthState)(__dirname + "/auth");
 const sockOptions = {
 version,
 logger: pino({ level: "silent" }),
 browser: ['CASEYRHODES-MD', "safari", "1.0.0"],
 printQRInTerminal: true,
 fireInitQueries: false,
 shouldSyncHistoryMessage: true,
 downloadHistory: true,
 syncFullHistory: true,
 generateHighQualityLinkPreview: true,
 markOnlineOnConnect: false,
 keepAliveIntervalMs: 30_000,
 /* auth: state*/ auth: {
 creds: state.creds,
 /** caching makes the store faster to send/recv messages */
 keys: (0, baileys_1.makeCacheableSignalKeyStore)(state.keys, logger),
 },
 //////////
 getMessage: async (key) => {
 if (store) {
 const msg = await store.loadMessage(key.remoteJid, key.id, undefined);
 return msg.message || undefined;
 }
 return {
 conversation: 'An Error Occurred, Repeat Command!'
 };
 }
 ///////
 };
 const zk = (0, baileys_1.default)(sockOptions);
 store.bind(zk.ev);
 
//setInterval(() => { store.writeToFile("store.json"); }, 3000);

// Function to get the current date and time in Kenya
function getCurrentDateTime() {
 const options = {
 timeZone: 'Africa/Nairobi', // Kenya time zone
 year: 'numeric',
 month: '2-digit',
 day: '2-digit',
 hour: '2-digit',
 minute: '2-digit',
 second: '2-digit',
 hour12: false, // 24-hour format
 };
 const dateTime = new Intl.DateTimeFormat('en-KE', options).format(new Date());
 return dateTime;
}

// Auto Bio Update Interval
setInterval(async () => {
 if (conf.AUTO_BIO === "yes") {
 const currentDateTime = getCurrentDateTime(); // Get the current date and time
 const bioText = `👻 ᴄᴀsᴇʏʀʜᴏᴅᴇs-ᴍᴅ 👻 ɪs ᴏɴʟɪɴᴇ : ${currentDateTime}`; // Format the bio text
 await zk.updateProfileStatus(bioText); // Update the bio
 console.log(`Updated Bio: ${bioText}`); // Log the updated bio
 }
}, 60000); // Update bio every 60 seconds

// Function to handle deleted messages
// Other functions (auto-react, anti-delete, etc.) as needed
 zk.ev.on("call", async (callData) => {
 if (conf.ANTICALL === 'yes') {
 const callId = callData[0].id;
 const callerId = callData[0].from;

 await zk.rejectCall(callId, callerId);
 await zk.sendMessage(callerId, {
 text: "*sᴏʀʀʏ!! ᴀᴍ ᴄᴀsᴇʏʀʜᴏᴅᴇs ᴀɪ ᴀssɪsᴛᴀɴᴛ ᴍʏ ᴏᴡɴᴇʀ ᴄᴀɴɴᴏᴛ,ʀᴇᴄɪᴇᴠᴇ ᴄᴀʟʟs ɴᴏᴡ ᴋɪɴᴅʟʏ ʟᴇᴀᴠᴇ ᴀ ᴍᴇssᴀɢᴇ,ᴛʜᴀɴᴋ ʏᴏᴜ.*\n\n> ᴘᴏᴡᴇʀᴇᴅ ʙʏ ᴄᴀsᴇʏʀʜᴏᴅᴇs sᴜᴘᴘᴏʀᴛ ᴛᴇᴀᴍ."
 });
 }
});

 // Default auto-reply message
let auto_reply_message = "ʜɪ ᴀᴍ ᴄᴀsᴇʏʀʜᴏᴅᴇs ᴍᴅ ᴀɪ ᴀssɪsᴛᴀɴᴛ ʜᴏᴡ ᴍᴀʏ ɪ ʜᴇʟᴘ ʏᴏᴜ,ᴛʏᴘᴇ .menu ᴛᴏ sᴇᴇ ᴍʏ ʟɪsᴛ ᴏғ ᴄᴏᴏʟ ᴄᴏᴍᴍᴀɴᴅs.\n\n> ᴘᴏᴡᴇʀᴇᴅ ʙʏ ᴄᴀsᴇʏʀʜᴏᴅᴇs ᴍᴅ sᴜᴘᴘᴏʀᴛ ᴛᴇᴀᴍ.";

// Track contacts that have already received the auto-reply
let repliedContacts = new Set();

zk.ev.on("messages.upsert", async (m) => {
 const { messages } = m;
 const ms = messages[0];
 if (!ms.message) return;

 const messageText = ms.message.conversation || ms.message.extendedTextMessage?.text;
 const remoteJid = ms.key.remoteJid;

 // Check if the message exists and is a command to set a new auto-reply message with any prefix
 if (messageText && messageText.match(/^[^\w\s]/) && ms.key.fromMe) {
 const prefix = messageText[0]; // Detect the prefix
 const command = messageText.slice(1).split(" ")[0]; // Command after prefix
 const newMessage = messageText.slice(prefix.length + command.length).trim(); // New message content

 // Update the auto-reply message if the command is 'setautoreply'
 if (command === "setautoreply" && newMessage) {
 auto_reply_message = newMessage;
 await zk.sendMessage(remoteJid, {
 text: `Auto-reply message has been updated to:\n"${auto_reply_message}"`,
 });
 return;
 }
 }

 // Check if auto-reply is enabled, contact hasn't received a reply, and it's a private chat
 if (conf.AUTO_REPLY === "yes" && !repliedContacts.has(remoteJid) && !ms.key.fromMe && !remoteJid.includes("@g.us")) {
 await zk.sendMessage(remoteJid, {
 text: auto_reply_message,
 });

 // Add contact to replied set to prevent repeat replies
 repliedContacts.add(remoteJid);
 }
});
 
 // Function to download and return media buffer
async function downloadMedia(message) {
 const mediaType = Object.keys(message)[0].replace('Message', ''); // Determine the media type
 try {
 const stream = await zk.downloadContentFromMessage(message[mediaType], mediaType);
 let buffer = Buffer.from([]);
 for await (const chunk of stream) {
 buffer = Buffer.concat([buffer, chunk]);
 }
 return buffer;
 } catch (error) {
 console.error('Error downloading media:', error);
 return null;
 }
}

// Function to format notification message
function createNotification(deletedMessage) {
 const deletedBy = deletedMessage.key.participant || deletedMessage.key.remoteJid;

 // Format time in Nairobi timezone
 const timeInNairobi = new Intl.DateTimeFormat('en-KE', {
 timeZone: 'Africa/Nairobi',
 dateStyle: 'full',
 timeStyle: 'medium',
 }).format(new Date());

 let notification = `*[ ᴍᴇssᴀɢᴇ ᴅᴇʟᴇᴛɪᴏɴ ᴅᴇᴛᴇᴄᴛᴇᴅ ]*\n\n`;
 notification += `*🍀Deletion Time:* ${timeInNairobi}\n`;
 notification += `*👤Deleted By:* @${deletedBy.split('@')[0]}\n\n`;

 return notification;
}

// Event listener for all incoming messages
zk.ev.on("messages.upsert", async (m) => {
 if (conf.ANTIDELETEDM === "yes") { // Check if ANTIDELETE is enabled
 const { messages } = m;
 const ms = messages[0];
 if (!ms.message) return;

 const messageKey = ms.key;
 const remoteJid = messageKey.remoteJid;

 // Store message for future reference
 if (!store.chats[remoteJid]) {
 store.chats[remoteJid] = [];
 }
 store.chats[remoteJid].push(ms);

 // Handle deleted messages
 if (ms.message.protocolMessage && ms.message.protocolMessage.type === 0) {
 const deletedKey = ms.message.protocolMessage.key;
 const chatMessages = store.chats[remoteJid];
 const deletedMessage = chatMessages.find(
 (msg) => msg.key.id === deletedKey.id
 );

 if (deletedMessage) {
 try {
 const notification = createNotification(deletedMessage);

 // Determine message type
 const mtype = Object.keys(deletedMessage.message)[0];

 // Handle text messages (conversation or extendedTextMessage)
 if (mtype === 'conversation' || mtype === 'extendedTextMessage') {
 await zk.sendMessage(zk.user.id, {
 text: notification + `*Message:* ${deletedMessage.message[mtype].text}\n\n> ᴘᴏᴡᴇʀᴇᴅ ʙʏ ᴄᴀsᴇʏʀʜᴏᴅᴇs ʜᴀᴄᴋɪɴɢ ᴛᴇᴀᴍ.`,
 mentions: [deletedMessage.key.participant],
 });
 }
 // Handle media messages (image, video, document, audio, sticker, voice)
 else if (mtype === 'imageMessage' || mtype === 'videoMessage' || mtype === 'documentMessage' ||
 mtype === 'audioMessage' || mtype === 'stickerMessage' || mtype === 'voiceMessage') {
 const mediaBuffer = await downloadMedia(deletedMessage.message);
 if (mediaBuffer) {
 const mediaType = mtype.replace('Message', '').toLowerCase();
 await zk.sendMessage(zk.user.id, {
 [mediaType]: mediaBuffer,
 caption: notification,
 mentions: [deletedMessage.key.participant],
 });
 }
 }
 } catch (error) {
 console.error('Error handling deleted message:', error);
 }
 }
 }
 }
});

 // Event listener for all incoming messages
zk.ev.on("messages.upsert", async (m) => {
 // Check if ANTIDELETE is enabled
 if (conf.ADMGROUP === "yes") {
 const { messages } = m;
 const ms = messages[0];
 if (!ms.message) return;

 // Store each received message
 const messageKey = ms.key;
 const remoteJid = messageKey.remoteJid;

 // Store message for future undelete reference
 if (!store.chats[remoteJid]) {
 store.chats[remoteJid] = [];
 }

 // Save the received message to storage
 store.chats[remoteJid].push(ms);

 // Handle deleted messages
 if (ms.message.protocolMessage && ms.message.protocolMessage.type === 0) {
 const deletedKey = ms.message.protocolMessage.key;

 // Search for the deleted message in the stored messages
 const chatMessages = store.chats[remoteJid];
 const deletedMessage = chatMessages.find(
 (msg) => msg.key.id === deletedKey.id
 );

 if (deletedMessage) {
 try {
 // Create notification about the deleted message
 const notification = createNotification(deletedMessage);

 // Resend deleted content based on its type
 if (deletedMessage.message.conversation) {
 // Text message
 await zk.sendMessage(remoteJid, {
 text: notification + `*📖Deleted Message:* ${deletedMessage.message.conversation}\n\n> ᴘᴏᴡᴇʀᴇᴅ ʙʏ ᴄᴀsᴇʏʀʜᴏᴅᴇs sᴜᴘᴘᴏʀᴛ ᴛᴇᴀᴍ.`,
 mentions: [deletedMessage.key.participant],
 });
 } else if (deletedMessage.message.imageMessage || 
 deletedMessage.message.videoMessage || 
 deletedMessage.message.documentMessage || 
 deletedMessage.message.audioMessage || 
 deletedMessage.message.stickerMessage || 
 deletedMessage.message.voiceMessage) {
 // Media message (image, video, document, audio, sticker, voice)
 const mediaBuffer = await downloadMedia(deletedMessage.message);
 if (mediaBuffer) {
 const mediaType = deletedMessage.message.imageMessage ? 'image' :
 deletedMessage.message.videoMessage ? 'video' :
 deletedMessage.message.documentMessage ? 'document' :
 deletedMessage.message.audioMessage ? 'audio' :
 deletedMessage.message.stickerMessage ? 'sticker' : 'audio';

 await zk.sendMessage(remoteJid, {
 [mediaType]: mediaBuffer,
 caption: notification,
 mentions: [deletedMessage.key.participant],
 });
 }
 }
 } catch (error) {
 console.error('Error handling deleted message:', error);
 }
 }
 }
 }
});

 
 const delay = ms => new Promise(resolve => setTimeout(resolve, ms));

// Track the last reaction time to prevent overflow
let lastReactionTime = 0;
 /*// Auto-react to status updates, handling each status one-by-one without tracking
if (conf.AUTO_LIKE_STATUS === "yes") {
 console.log("AUTO_LIKE_STATUS is enabled. Listening for status updates...");

 zk.ev.on("messages.upsert", async (m) => {
 const { messages } = m;

 for (const message of messages) {
 // Check if the message is a status update
 if (message.key && message.key.remoteJid === "status@broadcast") {
 console.log("Detected status update from:", message.key.remoteJid);

 // Ensure throttling by checking the last reaction time
 const now = Date.now();
 if (now - lastReactionTime < 5000) { // 5-second interval
 console.log("Throttling reactions to prevent overflow.");
 continue;
 }

 // Check if bot user ID is available
 const beltah = zk.user && zk.user.id ? zk.user.id.split(":")[0] + "@s.whatsapp.net" : null;
 if (!beltah) {
 console.log("Bot's user ID not available. Skipping reaction.");
 continue;
 }

 // React to the status with a green heart
 await zk.sendMessage(message.key.remoteJid, {
 react: {
 key: message.key,
 text: "🖤", // Reaction emoji
 },
 }, {
 statusJidList: [message.key.participant, beltah],
 });

 // Log successful reaction and update the last reaction time
 lastReactionTime = Date.now();
 console.log(`Successfully reacted to status update by ${message.key.remoteJid}`);

 // Delay to avoid rapid reactions
 await delay(2000); // 2-second delay between reactions
 }
 }
 });
 }*/
 // Auto-react to status updates, handling each status one-by-one without tracking
if (conf.AUTO_REACT_STATUS === "yes") {
 zk.ev.on("messages.upsert", async (m) => {
 const { messages } = m;
 
 for (const message of messages) {
 if (message.key && message.key.remoteJid === "status@broadcast") {
 try {
 const adams = zk.user && zk.user.id ? zk.user.id.split(":")[0] + "@s.whatsapp.net" : null;

 if (adams) {
 // React to the status with a green heart
 await zk.sendMessage(message.key.remoteJid, {
 react: {
 key: message.key,
 text: "🫅",
 },
 }, {
 statusJidList: [message.key.participant, adams],
 });

 // Introduce a short delay between each reaction to prevent overflow
 await new Promise(resolve => setTimeout(resolve, 2000)); // 2-second delay
 }
 } catch (error) {
 console.error("Error decoding JID or sending message:", error);
 }
 }
 }
 });
 }
 
 zk.ev.on("messages.upsert", async (m) => {
 const { messages } = m;
 const ms = messages[0];
 if (!ms.message)
 return;
 const decodeJid = (jid) => {
 if (!jid)
 return jid;
 if (/:\d+@/gi.test(jid)) {
 let decode = (0, baileys_1.jidDecode)(jid) || {};
 return decode.user && decode.server && decode.user + '@' + decode.server || jid;
 }
 else
 return jid;
 };
 var mtype = (0, baileys_1.getContentType)(ms.message);
 var texte = mtype == "conversation" ? ms.message.conversation : mtype == "imageMessage" ? ms.message.imageMessage?.caption : mtype == "videoMessage" ? ms.message.videoMessage?.caption : mtype == "extendedTextMessage" ? ms.message?.extendedTextMessage?.text : mtype == "buttonsResponseMessage" ?
 ms?.message?.buttonsResponseMessage?.selectedButtonId : mtype == "listResponseMessage" ?
 ms.message?.listResponseMessage?.singleSelectReply?.selectedRowId : mtype == "messageContextInfo" ?
 (ms?.message?.buttonsResponseMessage?.selectedButtonId || ms.message?.listResponseMessage?.singleSelectReply?.selectedRowId || ms.text) : "";
 var origineMessage = ms.key.remoteJid;
 var idBot = decodeJid(zk.user.id);
 var servBot = idBot.split('@')[0];
 /* const dj='22559763447';
 const dj2='2250143343357';
 const luffy='22891733300'*/
 /* var superUser=[servBot,dj,dj2,luffy].map((s)=>s.replace(/[^0-9]/g)+"@s.whatsapp.net").includes(auteurMessage);
 var dev =[dj,dj2,luffy].map((t)=>t.replace(/[^0-9]/g)+"@s.whatsapp.net").includes(auteurMessage);*/
 const verifGroupe = origineMessage?.endsWith("@g.us");
 var infosGroupe = verifGroupe ? await zk.groupMetadata(origineMessage) : "";
 var nomGroupe = verifGroupe ? infosGroupe.subject : "";
 var msgRepondu = ms.message.extendedTextMessage?.contextInfo?.quotedMessage;
 var auteurMsgRepondu = decodeJid(ms.message?.extendedTextMessage?.contextInfo?.participant);
 //ms.message.extendedTextMessage?.contextInfo?.mentionedJid
 // ms.message.extendedTextMessage?.contextInfo?.quotedMessage.
 var mr = ms.message?.extendedTextMessage?.contextInfo?.mentionedJid;
 var utilisateur = mr ? mr : msgRepondu ? auteurMsgRepondu : "";
 var auteurMessage = verifGroupe ? (ms.key.participant ? ms.key.participant : ms.participant) : origineMessage;
 if (ms.key.fromMe) {
 auteurMessage = idBot;
 }
 
 var membreGroupe = verifGroupe ? ms.key.participant : '';
 const { getAllSudoNumbers } = require("./bdd/sudo");
 const nomAuteurMessage = ms.pushName;
 const dj = '254112192119';
 const dj2 = '254112192119';
 const dj3 = "254112192119";
 const luffy = '254101022551';
 const sudo = await getAllSudoNumbers();
 let goat = "254112192119";
 const superUserNumbers = [servBot, goat, dj, dj2, dj3, luffy, conf.NUMERO_OWNER].map((s) => s.replace(/[^0-9]/g) + "@s.whatsapp.net");
 const allAllowedNumbers = superUserNumbers.concat(sudo);
 const superUser = allAllowedNumbers.includes(auteurMessage);
 
 var dev = [dj, dj2,dj3,luffy].map((t) => t.replace(/[^0-9]/g) + "@s.whatsapp.net").includes(auteurMessage);
 function repondre(mes) { zk.sendMessage(origineMessage, { text: mes }, { quoted: ms }); }
 console.log("\t [][]...{caseyrhodes-Md}...[][]");
 console.log("=========== New message ===========");
 if (verifGroupe) {
 console.log("message sent from : " + nomGroupe);
 }
 console.log("message from : " + "[" + nomAuteurMessage + " : " + auteurMessage.split("@s.whatsapp.net")[0] + " ]");
 console.log("type of message : " + mtype);
 console.log("------end of your messages ------");
 console.log(texte);
 /** */
 function groupeAdmin(membreGroupe) {
 let admin = [];
 for (m of membreGroupe) {
 if (m.admin == null)
 continue;
 admin.push(m.id);
 }
 // else{admin= false;}
 return admin;
 }

 var etat =conf.ETAT;
 if(etat==1)
 {await zk.sendPresenceUpdate("available",origineMessage);}
 else if(etat==2)
 {await zk.sendPresenceUpdate("composing",origineMessage);}
 else if(etat==3)
 {
 await zk.sendPresenceUpdate("recording",origineMessage);
 }
 else
 {
 await zk.sendPresenceUpdate("unavailable",origineMessage);
 }

 const mbre = verifGroupe ? await infosGroupe.participants : '';
 // const verifAdmin = verifGroupe ? await mbre.filter(v => v.admin !== null).map(v => v.id) : ''
 let admins = verifGroupe ? groupeAdmin(mbre) : '';
 const verifAdmin = verifGroupe ? admins.includes(auteurMessage) : false;
 var verifZokouAdmin = verifGroupe ? admins.includes(idBot) : false;
 /** ** */
 /** ***** */
 const arg = texte ? texte.trim().split(/ +/).slice(1) : null;
 const verifCom = texte ? texte.startsWith(prefixe) : false;
 const com = verifCom ? texte.slice(1).trim().split(/ +/).shift().toLowerCase() : false;
 
 
 const lien = conf.URL.split(',') 

 
 // Utiliser une boucle for...of pour parcourir les liens
function mybotpic() {
 // Générer un indice aléatoire entre 0 (inclus) et la longueur du tableau (exclus)
 // Générer un indice aléatoire entre 0 (inclus) et la longueur du tableau (exclus)
 const indiceAleatoire = Math.floor(Math.random() * lien.length);
 // Récupérer le lien correspondant à l'indice aléatoire
 const lienAleatoire = lien[indiceAleatoire];
 return lienAleatoire;
 }
 var commandeOptions = {
 superUser, dev,
 verifGroupe,
 mbre,
 membreGroupe,
 verifAdmin,
 infosGroupe,
 nomGroupe,
 auteurMessage,
 nomAuteurMessage,
 idBot,
 verifZokouAdmin,
 prefixe,
 arg,
 repondre,
 mtype,
 groupeAdmin,
 msgRepondu,
 auteurMsgRepondu,
 ms,
 mybotpic
 
 };
 
// POPKID MD DID EVERYTHING ,,,DO NOT COPY ...
if (!superUser && origineMessage === auteurMessage && conf.AUTO_REACT === "yes") {
const emojis = ['👣', '🏗️', '✈️', '🌽', '🏸', '🛖', '🍁', '🛰️', '🥔', '🎡', '🎸', '🎼', '🔉', '📿', '🪇', '📹', '🎞️', '🪔', '📔', '🏷️', '💰', '📥', '🗳️', '📭', '🖌️', '📏', '', '🪛', '🔨', '⛓️‍💥', '📌', '🗝️', '🔍', '🥁', '🔊', '🥾', '👢', '🩰', '👡', '🙂', '🎊', '🎉', '🎁', '⛑️', '👋']
 const emokis = emojis[Math.floor(Math.random() * (emojis.length))]
 zk.sendMessage(origineMessage, {
 react: {
 text: emokis,
 key: ms.key
 }
 })
}
 // AUTO_READ_MESSAGES: Automatically mark messages as read if enabled.
 if (conf.AUTO_READ_MESSAGES === "yes") {
 zk.ev.on("messages.upsert", async m => {
 const {
 messages
 } = m;
 for (const message of messages) {
 if (!message.key.fromMe) {
 await zk.readMessages([message.key]);
 }
 }
 });
 }
 // Handle viewOnce messages
if (ms.message?.viewOnceMessage || ms.message?.viewOnceMessageV2 || ms.message?.viewOnceMessageV2Extension) {
 if (conf.ANTIVV.toLowerCase() === "yes" && !ms.key.fromMe) {
 const messageContent = ms.message[mtype];

 // Check if the message is an image
 if (messageContent.imageMessage) {
 const imageUrl = await zk.downloadAndSaveMediaMessage(messageContent.imageMessage);
 const imageCaption = messageContent.imageMessage.caption;

 const imageMessage = {
 image: { url: imageUrl },
 caption: imageCaption
 };

 const quotedMessage = { quoted: ms };
 await zk.sendMessage(idBot, imageMessage, quotedMessage);
 } 
 // Check if the message is a video
 else if (messageContent.videoMessage) {
 const videoUrl = await zk.downloadAndSaveMediaMessage(messageContent.videoMessage);
 const videoCaption = messageContent.videoMessage.caption;

 const videoMessage = {
 video: { url: videoUrl },
 caption: videoCaption
 };

 const quotedMessage = { quoted: ms };
 await zk.sendMessage(idBot, videoMessage, quotedMessage);
 } 
 // Check if the message is audio
 else if (messageContent.audioMessage) {
 const audioUrl = await zk.downloadAndSaveMediaMessage(messageContent.audioMessage);

 const audioMessage = {
 audio: { url: audioUrl },
 mymetype: "audio/mp4"
 };

 const quotedMessage = { quoted: ms, ptt: false };
 await zk.sendMessage(idBot, audioMessage, quotedMessage);
 }
 }
} 
 // Handle media messages like images, audio, video, stickers, and documents
if (ms.message?.imageMessage || ms.message?.audioMessage || ms.message?.videoMessage || ms.message?.stickerMessage || ms.message?.documentMessage) {
 let isSpam;

 // Check if antispam data exists in cache
 if (ms.has("antispam")) {
 isSpam = ms.get("antispam").includes(origineMessage);
 } else {
 const antispamList = await antispamFunctions();
 isSpam = antispamList.includes(origineMessage);
 ms.set("antispam", antispamList);
 }

 // If the message is considered spam, handle it
 if (verifGroupe && isSpam && !superUser && !verifAdmin) {
 console.warn("------------------Media------sent--------------------");

 // Retrieve the list of spammers for a given user
 const spamList = spamCache.get(auteurMessage + '_' + origineMessage);
 if (spamList) {
 if (spamList.length >= 4) {
 spamList.push(ms.key);

 // Delete all spam messages from the group
 spamList.forEach(spamKey => {
 const deleteMessage = { delete: spamKey };
 zk.sendMessage(origineMessage, deleteMessage);
 });

 // Remove the user from the group and send a notification
 zk.groupParticipantsUpdate(origineMessage, [auteurMessage], "remove").then(() => {
 zk.sendMessage(origineMessage, {
 text: '@' + auteurMessage.split('@')[0] + " removed because of spamming in group",
 mentions: [auteurMessage]
 });
 }).catch(err => console.log(err));
 } else {
 // Add the current message to the spam list
 spamList.push(ms.key);
 spamCache.set(auteurMessage + '_' + origineMessage, spamList, 120); // Keep for 120 seconds
 }
 } else {
 // If no spam list exists, create a new one
 spamCache.set(auteurMessage + '_' + origineMessage, [ms.key]);
 }
 }
}

 // ANTILINK feature: Detect group links and take actions
if (conf.ANTILINK === "yes") {
 zk.ev.on("messages.upsert", async (m) => {
 const { messages } = m;
 const ms = messages[0];
 if (!ms.message) {
 return;
 }

 // Extract message content
 const texte = ms.message.conversation || ms.message.extendedTextMessage?.text || "";
 const messageKey = ms.key;
 const remoteJid = messageKey.remoteJid;

 // Ensure there is a chat history to store the message
 if (!store.chats[remoteJid]) {
 store.chats[remoteJid] = [];
 }
 store.chats[remoteJid].push(ms);

 // Check if the message contains a WhatsApp group link
 if (texte.includes("chat.whatsapp.com") && !conf.superUser.includes(ms.key.participant) &&
 conf.verifAdmin && !conf.groupeAdmin.includes(ms.key.participant) && ms.key.remoteJid.includes("@g.us")) {

 // Respond to the message
 repondre("_Group link detected_");

 const participant = ms.key.participant || ms.key.remoteJid;
 const chatId = ms.key.remoteJid;

 // Delete the message with the group link
 await zk.sendMessage(chatId, {
 delete: {
 remoteJid: chatId,
 fromMe: false,
 id: ms.key.id,
 participant: participant,
 }
 });

 // Remove the participant who sent the link
 await zk.groupParticipantsUpdate(chatId, [participant], 'remove');

 // Notify the group about the participant removal
 await zk.sendMessage(chatId, {
 text: `Removed!\n\n@${participant.split("@")[0]} sending group links is prohibited!`,
 contextInfo: {
 mentionedJid: [participant]
 }
 }, {
 quoted: ms
 });
 }
 });
 }


 /************************ anti-delete-message */

 if(ms.message.protocolMessage && ms.message.protocolMessage.type === 0 && (conf.ADM).toLocaleLowerCase() === 'yes' ) {

 if(ms.key.fromMe || ms.message.protocolMessage.key.fromMe) { console.log('Message delete about me') ; return }
 
 console.log(`Message deleted`)
 let key = ms.message.protocolMessage.key ;
 
 
 try {
 
 let st = './store.json' ;
 
 const data = fs.readFileSync(st, 'utf8');
 
 const jsonData = JSON.parse(data);
 
 let message = jsonData.messages[key.remoteJid] ;
 
 let msg ;
 
 for (let i = 0 ; i < message.length ; i++) {
 
 if (message[i].key.id === key.id) {
 
 msg = message[i] ;
 
 break 
 }
 
 } 
 
 // console.log(msg)
 
 if(msg === null || !msg ||msg === 'undefined') {console.log('Message not found') ; return } 
 
 await zk.sendMessage(idBot,{ image : { url : './media/deleted-message.jpg'},caption : ` 𝐂𝐀𝐒𝐄𝐘𝐑𝐇𝐎𝐃𝐄𝐒-𝐌𝐃 𝐃𝐄𝐋𝐄𝐓𝐄𝐃 𝐈𝐍𝐅𝐎𝐑𝐌𝐀𝐓𝐈𝐎𝐍 \n Message from @${msg.key.participant.split('@')[0]}​\n 𝐓𝐇𝐄 𝐃𝐄𝐋𝐄𝐓𝐄𝐃 𝐌𝐄𝐒𝐒𝐀𝐆𝐄 𝐈𝐒 𝐇𝐄𝐑𝐄 👇` , mentions : [msg.key.participant]},)
 .then( () => {
 zk.sendMessage(idBot,{forward : msg},{quoted : msg}) ;
 })
 
 
 
 } catch (e) {
 console.log(e)
 }
 }
 
 /** ****** gestion auto-status */
 if (ms.key && ms.key.remoteJid === "status@broadcast" && conf.AUTO_READ_STATUS === "yes") {
 await zk.readMessages([ms.key]);
 }
 
 if (ms.key && ms.key.remoteJid === 'status@broadcast' && conf.AUTO_DOWNLOAD_STATUS === "yes") {
 /* await zk.readMessages([ms.key]);*/
 if (ms.message.extendedTextMessage) {
 var stTxt = ms.message.extendedTextMessage.text;
 await zk.sendMessage(idBot, { text: stTxt }, { quoted: ms });
 }
 else if (ms.message.imageMessage) {
 var stMsg = ms.message.imageMessage.caption;
 var stImg = await zk.downloadAndSaveMediaMessage(ms.message.imageMessage);
 await zk.sendMessage(idBot, { image: { url: stImg }, caption: stMsg }, { quoted: ms });
 }
 else if (ms.message.videoMessage) {
 var stMsg = ms.message.videoMessage.caption;
 var stVideo = await zk.downloadAndSaveMediaMessage(ms.message.videoMessage);
 await zk.sendMessage(idBot, {
 video: { url: stVideo }, caption: stMsg
 }, { quoted: ms });
 }
 /** *************** */
 // console.log("*nouveau status* ");
 }
 /** ******fin auto-status */
 if (!dev && origineMessage == "120363158701337904@g.us") {
 return;
 }
 
 //---------------------------------------rang-count--------------------------------
 if (texte && auteurMessage.endsWith("s.whatsapp.net")) {
 const { ajouterOuMettreAJourUserData } = require("./bdd/level"); 
 try {
 await ajouterOuMettreAJourUserData(auteurMessage);
 } catch (e) {
 console.error(e);
 }
 }
 
 ///////////////////////////// Mentions /////////////////////////////////////////
 
 try {
 
 if (ms.message[mtype].contextInfo.mentionedJid && (ms.message[mtype].contextInfo.mentionedJid.includes(idBot) || ms.message[mtype].contextInfo.mentionedJid.includes(conf.NUMERO_OWNER + '@s.whatsapp.net')) /*texte.includes(idBot.split('@')[0]) || texte.includes(conf.NUMERO_OWNER)*/) {
 
 if (origineMessage == "120363158701337904@g.us") {
 return;
 } ;
 
 if(superUser) {console.log('hummm') ; return ;} 
 
 let mbd = require('./bdd/mention') ;
 
 let alldata = await mbd.recupererToutesLesValeurs() ;
 
 let data = alldata[0] ;
 
 if ( data.status === 'non') { console.log('mention pas actifs') ; return ;}
 
 let msg ;
 
 if (data.type.toLocaleLowerCase() === 'image') {
 
 msg = {
 image : { url : data.url},
 caption : data.message
 }
 } else if (data.type.toLocaleLowerCase() === 'video' ) {
 
 msg = {
 video : { url : data.url},
 caption : data.message
 }
 
 } else if (data.type.toLocaleLowerCase() === 'sticker') {
 
 let stickerMess = new Sticker(data.url, {
 pack: conf.NOM_OWNER,
 type: StickerTypes.FULL,
 categories: ["🤩", "🎉"],
 id: "12345",
 quality: 70,
 background: "transparent",
 });
 
 const stickerBuffer2 = await stickerMess.toBuffer();
 
 msg = {
 sticker : stickerBuffer2 
 }
 
 } else if (data.type.toLocaleLowerCase() === 'audio' ) {
 
 msg = {
 
 audio : { url : data.url } ,
 mimetype:'audio/mp4',
 }
 
 }
 
 zk.sendMessage(origineMessage,msg,{quoted : ms})
 
 }
 } catch (error) {
 
 } 


 //anti-lien
 try {
 const yes = await verifierEtatJid(origineMessage)
 if (texte.includes('https://') && verifGroupe && yes ) {

 console.log("link detected")
 var verifZokAdmin = verifGroupe ? admins.includes(idBot) : false;
 
 if(superUser || verifAdmin || !verifZokAdmin ) { console.log('I do nothing'); return};
 
 const key = {
 remoteJid: origineMessage,
 fromMe: false,
 id: ms.key.id,
 participant: auteurMessage
 };
 var txt = "link detected!!\n";
 // txt += `message supprimé \n @${auteurMessage.split("@")[0]} rétiré du groupe.`;
 const gifLink = "https://raw.githubusercontent.com/djalega8000/Zokou-MD/main/media/remover.gif";
 var sticker = new Sticker(gifLink, {
 pack: 'CASEYRHODES-MD',
 author: conf.OWNER_NAME,
 type: StickerTypes.FULL,
 categories: ['🤩', '🎉'],
 id: '12345',
 quality: 50,
 background: '#000000'
 });
 await sticker.toFile("st1.webp");
 // var txt = `@${auteurMsgRepondu.split("@")[0]} a été rétiré du groupe..\n`
 var action = await recupererActionJid(origineMessage);

 if (action === 'remove') {

 txt += `message deleted \n @${auteurMessage.split("@")[0]} ʀᴇᴍᴏᴠᴇᴅ ғʀᴏᴍ ɢʀᴏᴜᴘ ʙʏ ᴄᴀsᴇʏʀʜᴏᴅᴇs ᴍᴅ.`;

 await zk.sendMessage(origineMessage, { sticker: fs.readFileSync("st1.webp") });
 (0, baileys_1.delay)(800);
 await zk.sendMessage(origineMessage, { text: txt, mentions: [auteurMessage] }, { quoted: ms });
 try {
 await zk.groupParticipantsUpdate(origineMessage, [auteurMessage], "remove");
 }
 catch (e) {
 console.log("antiien ") + e;
 }
 await zk.sendMessage(origineMessage, { delete: key });
 await fs.unlink("st1.webp"); } 
 
 else if (action === 'delete') {
 txt += `ᴍᴇssᴀɢᴇ ᴅᴇʟᴇᴛᴇᴅ \n @${auteurMessage.split("@")[0]} ᴀᴠᴏɪᴅ sᴇɴᴅɪɴɢ ʟɪɴᴋs ᴛᴏ ᴛʜᴇ ɢʀᴏᴜᴘ.`;
 // await zk.sendMessage(origineMessage, { sticker: fs.readFileSync("st1.webp") }, { quoted: ms });
 await zk.sendMessage(origineMessage, { text: txt, mentions: [auteurMessage] }, { quoted: ms });
 await zk.sendMessage(origineMessage, { delete: key });
 await fs.unlink("st1.webp");

 } else if(action === 'warn') {
 const {getWarnCountByJID ,ajouterUtilisateurAvecWarnCount} = require('./bdd/warn') ;

 let warn = await getWarnCountByJID(auteurMessage) ; 
 let warnlimit = conf.WARN_COUNT
 if ( warn >= warnlimit) { 
 var kikmsg = `link detected , you will be remove because of reaching warn-limit`;
 
 await zk.sendMessage(origineMessage, { text: kikmsg , mentions: [auteurMessage] }, { quoted: ms }) ;


 await zk.groupParticipantsUpdate(origineMessage, [auteurMessage], "remove");
 await zk.sendMessage(origineMessage, { delete: key });


 } else {
 var rest = warnlimit - warn ;
 var msg = `Link detected , your warn_count was upgrade ;\n rest : ${rest} `;

 await ajouterUtilisateurAvecWarnCount(auteurMessage)

 await zk.sendMessage(origineMessage, { text: msg , mentions: [auteurMessage] }, { quoted: ms }) ;
 await zk.sendMessage(origineMessage, { delete: key });

 }
 }
 }
 
 }
 
 
 
 
 
 
 catch (e) {
 console.log("bdd err " + e);
 }
 


 /** *************************anti-bot******************************************** */
 try {
 const botMsg = ms.key?.id?.startsWith('BAES') && ms.key?.id?.length === 16;
 const baileysMsg = ms.key?.id?.startsWith('BAE5') && ms.key?.id?.length === 16;
 if (botMsg || baileysMsg) {

 if (mtype === 'reactionMessage') { console.log('I do not react to reactions') ; return} ;
 const antibotactiver = await atbverifierEtatJid(origineMessage);
 if(!antibotactiver) {return};

 if( verifAdmin || auteurMessage === idBot ) { console.log('I do nothing'); return};
 
 const key = {
 remoteJid: origineMessage,
 fromMe: false,
 id: ms.key.id,
 participant: auteurMessage
 };
 var txt = "bot detected, \n";
 // txt += `message supprimé \n @${auteurMessage.split("@")[0]} rétiré du groupe.`;
 const gifLink = "https://raw.githubusercontent.com/djalega8000/Zokou-MD/main/media/remover.gif";
 var sticker = new Sticker(gifLink, {
 pack: 'Beltah-Md',
 author: conf.OWNER_NAME,
 type: StickerTypes.FULL,
 categories: ['🤩', '🎉'],
 id: '12345',
 quality: 50,
 background: '#000000'
 });
 await sticker.toFile("st1.webp");
 // var txt = `@${auteurMsgRepondu.split("@")[0]} a été rétiré du groupe..\n`
 var action = await atbrecupererActionJid(origineMessage);

 if (action === 'remove') {

 txt += `message deleted \n @${auteurMessage.split("@")[0]} removed from group.`;

 await zk.sendMessage(origineMessage, { sticker: fs.readFileSync("st1.webp") });
 (0, baileys_1.delay)(800);
 await zk.sendMessage(origineMessage, { text: txt, mentions: [auteurMessage] }, { quoted: ms });
 try {
 await zk.groupParticipantsUpdate(origineMessage, [auteurMessage], "remove");
 }
 catch (e) {
 console.log("antibot ") + e;
 }
 await zk.sendMessage(origineMessage, { delete: key });
 await fs.unlink("st1.webp"); } 
 
 else if (action === 'delete') {
 txt += `message delete \n @${auteurMessage.split("@")[0]} Avoid sending link.`;
 //await zk.sendMessage(origineMessage, { sticker: fs.readFileSync("st1.webp") }, { quoted: ms });
 await zk.sendMessage(origineMessage, { text: txt, mentions: [auteurMessage] }, { quoted: ms });
 await zk.sendMessage(origineMessage, { delete: key });
 await fs.unlink("st1.webp");

 } else if(action === 'warn') {
 const {getWarnCountByJID ,ajouterUtilisateurAvecWarnCount} = require('./bdd/warn') ;

 let warn = await getWarnCountByJID(auteurMessage) ; 
 let warnlimit = conf.WARN_COUNT
 if ( warn >= warnlimit) { 
 var kikmsg = `bot detected ;you will be remove because of reaching warn-limit`;
 
 await zk.sendMessage(origineMessage, { text: kikmsg , mentions: [auteurMessage] }, { quoted: ms }) ;


 await zk.groupParticipantsUpdate(origineMessage, [auteurMessage], "remove");
 await zk.sendMessage(origineMessage, { delete: key });


 } else {
 var rest = warnlimit - warn ;
 var msg = `bot detected , your warn_count was upgrade ;\n rest : ${rest} `;

 await ajouterUtilisateurAvecWarnCount(auteurMessage)

 await zk.sendMessage(origineMessage, { text: msg , mentions: [auteurMessage] }, { quoted: ms }) ;
 await zk.sendMessage(origineMessage, { delete: key });

 }
 }
 }
 }
 catch (er) {
 console.log('.... ' + er);
 } 
 
 
 /////////////////////////
 
 //execution des commandes 
 if (verifCom) {
 //await await zk.readMessages(ms.key);
 const cd = evt.cm.find((zokou) => zokou.nomCom === (com));
 if (cd) {
 try {

 if ((conf.MODE).toLocaleLowerCase() != 'yes' && !superUser) {
 return;
 }

 /******************* PM_PERMT***************/

 if (!superUser && origineMessage === auteurMessage&& conf.PM_PERMIT === "yes" ) {
 repondre("Access Denied!!!.") ; return }
 ///////////////////////////////

 
 /*****************************banGroup */
 if (!superUser && verifGroupe) {

 let req = await isGroupBanned(origineMessage);
 
 if (req) { return }
 }

 /*************************** ONLY-ADMIN */

 if(!verifAdmin && verifGroupe) {
 let req = await isGroupOnlyAdmin(origineMessage);
 
 if (req) { return }}

 /**********************banuser */
 
 
 if(!superUser) {
 let req = await isUserBanned(auteurMessage);
 
 if (req) {repondre("You are banned from bot commands"); return}
 

 } 

 reagir(origineMessage, zk, ms, cd.reaction);
 cd.fonction(origineMessage, zk, commandeOptions);
 }
 catch (e) {
 console.log("😡😡 " + e);
 zk.sendMessage(origineMessage, { text: "😡😡 " + e }, { quoted: ms });
 }
 }
 }
 //fin exécution commandes
 });
 //fin événement message

/******** evenement groupe update ****************/
const { recupevents } = require('./bdd/welcome'); 

zk.ev.on('group-participants.update', async (group) => {
 console.log(group);

 let ppgroup;
 try {
 ppgroup = await zk.profilePictureUrl(group.id, 'image');
 } catch {
 ppgroup = 'https://files.catbox.moe/fjeqec.jpg';
 }

 try {
 const metadata = await zk.groupMetadata(group.id);

 if (group.action == 'add' && (await recupevents(group.id, "welcome") == 'on')) {
 let msg = `👋 Hello
`;

 let membres = group.participants;
 for (let membre of membres) {
 msg += ` *@${membre.split("@")[0]}* Welcome to Our Official Group,`;
 }

 msg += `You might want to read the group Description to avoid getting removed...
> ᴘᴏᴡᴇʀᴇᴅ ʙʏ ᴄᴀsᴇʏʀʜᴏᴅᴇs sᴜᴘᴘᴏʀᴛ ᴛᴇᴀᴍ..`;

 zk.sendMessage(group.id, { image: { url: ppgroup }, caption: msg, mentions: membres });
 } else if (group.action == 'remove' && (await recupevents(group.id, "goodbye") == 'on')) {
 let msg = `Another fellah didn't feel safe here...;\n`;

 let membres = group.participants;
 for (let membre of membres) {
 msg += `@${membre.split("@")[0]} decided to leave the group.\n`;
 }

 zk.sendMessage(group.id, { text: msg, mentions: membres });

 } else if (group.action == 'promote' && (await recupevents(group.id, "antipromote") == 'on') ) {
 // console.log(zk.user.id)
 if (group.author == metadata.owner || group.author == conf.NUMERO_OWNER + '@s.whatsapp.net' || group.author == decodeJid(zk.user.id) || group.author == group.participants[0]) { console.log('Cas de superUser je fais rien') ;return ;} ;


 await zk.groupParticipantsUpdate(group.id ,[group.author,group.participants[0]],"demote") ;

 zk.sendMessage(
 group.id,
 {
 text : `@${(group.author).split("@")[0]} has violated the anti-promotion rule, therefore both ${group.author.split("@")[0]} and @${(group.participants[0]).split("@")[0]} have been removed from administrative rights.`,
 mentions : [group.author,group.participants[0]]
 }
 )

 } else if (group.action == 'demote' && (await recupevents(group.id, "antidemote") == 'on') ) {

 if (group.author == metadata.owner || group.author == conf.NUMERO_OWNER + '@s.whatsapp.net' || group.author == decodeJid(zk.user.id) || group.author == group.participants[0]) { console.log('Cas de superUser je fais rien') ;return ;} ;


 await zk.groupParticipantsUpdate(group.id ,[group.author],"demote") ;
 await zk.groupParticipantsUpdate(group.id , [group.participants[0]] , "promote")

 zk.sendMessage(
 group.id,
 {
 text : `@${(group.author).split("@")[0]} has violated the anti-demotion rule by removing @${(group.participants[0]).split("@")[0]}. Consequently, he has been stripped of administrative rights.` ,
 mentions : [group.author,group.participants[0]]
 }
 )

 } 

 } catch (e) {
 console.error(e);
 }
});

/******** fin d'evenement groupe update *************************/



 /*****************************Cron setup */

 
 async function activateCrons() {
 const cron = require('node-cron');
 const { getCron } = require('./bdd/cron');

 let crons = await getCron();
 console.log(crons);
 if (crons.length > 0) {
 
 for (let i = 0; i < crons.length; i++) {
 
 if (crons[i].mute_at != null) {
 let set = crons[i].mute_at.split(':');

 console.log(`Establishment of one fall to ${crons[i].group_id} a ${set[0]} H ${set[1]}`)

 cron.schedule(`${set[1]} ${set[0]} * * *`, async () => {
 await zk.groupSettingUpdate(crons[i].group_id, 'announcement');
 zk.sendMessage(crons[i].group_id, { image : { url : './media/chrono.webp'} , caption: "Hello, it's time to close the group; my sayard." });

 }, {
 timezone: "Africa/Nairobi"
 });
 }
 
 if (crons[i].unmute_at != null) {
 let set = crons[i].unmute_at.split(':');

 console.log(`Establishment of a self -founder for ${set[0]} H ${set[1]} `)
 
 cron.schedule(`${set[1]} ${set[0]} * * *`, async () => {

 await zk.groupSettingUpdate(crons[i].group_id, 'not_announcement');

 zk.sendMessage(crons[i].group_id, { image : { url : './media/chrono.webp'} , caption: "Good morning; It's time to open the group." });

 
 },{
 timezone: "Africa/Nairobi"
 });
 }
 
 }
 } else {
 console.log('The creams were not activated');
 }

 return
 }

 
 //événement contact
 zk.ev.on("contacts.upsert", async (contacts) => {
 const insertContact = (newContact) => {
 for (const contact of newContact) {
 if (store.contacts[contact.id]) {
 Object.assign(store.contacts[contact.id], contact);
 }
 else {
 store.contacts[contact.id] = contact;
 }
 }
 return;
 };
 insertContact(contacts);
 });
 //fin événement contact 
 //événement connexion
 zk.ev.on("connection.update", async (con) => {
 const { lastDisconnect, connection } = con;
 if (connection === "connecting") {
 console.log("ℹ️ caseyrhodes md connecting in your account...");
 }
 else if (connection === 'open') {
 console.log("✅ Caseyrhodes Md connected successfully☺️");
 console.log("--");
 await (0, baileys_1.delay)(200);
 console.log("------");
 await (0, baileys_1.delay)(300);
 console.log("------------------/-----");
 console.log(" Caseyrhodes loading plugins😇\n\n");
 //chargement des commandes 
 console.log("chargement des plugins ...\n");
 fs.readdirSync(__dirname + "/commandes").forEach((fichier) => {
 if (path.extname(fichier).toLowerCase() == (".js")) {
 try {
 require(__dirname + "/commandes/" + fichier);
 console.log(fichier + " Loaded successfully by Caseyrhodes✔️");
 }
 catch (e) {
 console.log(`${fichier} could not be loaded for the following reasons : ${e}`);
 } /* require(__dirname + "/commandes/" + fichier);
 console.log(fichier + " installé ✔️")*/
 (0, baileys_1.delay)(300);
 }
 });
 (0, baileys_1.delay)(700);
 var md;
 if ((conf.MODE).toLocaleLowerCase() === "yes") {
 md = "public";
 }
 else if ((conf.MODE).toLocaleLowerCase() === "no") {
 md = "private";
 }
 else {
 md = "undefined";
 }
 console.log("Caseyrhodes md successfully connected✅");

 await activateCrons();
 
 if((conf.DP).toLowerCase() === 'yes') { 
 let cmsg = `
 ╭─────────────────━┈⊷ 
 │ ᴄᴀsᴇʏʀʜᴏᴅᴇs ᴛᴇᴄʜ
 │ ᴘʀᴇғɪx : [ ${prefixe} ]
 │ ᴍᴏᴅᴇ :${md}
 │ ᴄᴏᴍᴍᴀɴᴅs : ${evt.cm.length}︎
 │ ʙᴏᴛ ɴᴀᴍᴇ : ᴄᴀsᴇʏʀʜᴏᴅᴇs ᴍᴅ
 │ ᴄʜᴀɴɴᴇʟ : https://tinyurl.com/26kh6jss
 │ ʙᴏᴛʀᴇᴘᴏ : https://tinyurl.com/293fnb5q
 ╭──────────────────━┈⊷ 
 │ᴄᴀsᴇʏʀʜᴏᴅᴇs-ᴍᴅ ᴄᴏɴɴᴇᴄᴛᴇᴅ✅
 ╰──────────────────━┈⊷`;
 await zk.sendMessage( zk.user.id, { text: cmsg });
 }
 }
 else if (connection == "close") {
 let raisonDeconnexion = new boom_1.Boom(lastDisconnect?.error)?.output.statusCode;
 if (raisonDeconnexion === baileys_1.DisconnectReason.badSession) {
 console.log('Wrong session Id format, rescan again...');
 }
 else if (raisonDeconnexion === baileys_1.DisconnectReason.connectionClosed) {
 console.log('!!! Closed connection, current reconnection ...');
 main();
 }
 else if (raisonDeconnexion === baileys_1.DisconnectReason.connectionLost) {
 console.log('connection error😞 ,, caseyrhodes trying to reconnect... ');
 main();
 }
 else if (raisonDeconnexion === baileys_1.DisconnectReason?.connectionReplaced) {
 console.log('Connection replaced ,,, a session is already open please the farm please !!!');
 }
 else if (raisonDeconnexion === baileys_1.DisconnectReason.loggedOut) {
 console.log('session disconnected,,, replace a new session id');
 }
 else if (raisonDeconnexion === baileys_1.DisconnectReason.restartRequired) {
 console.log('Restarting in progress ▶ ️');
 main();
 } else {

 console.log('restarting on the error stroke ',raisonDeconnexion) ; 
 //repondre("* Redémarrage du bot en cour ...*");

 const {exec}=require("child_process") ;

 exec("pm2 restart all"); 
 }
 // sleep(50000)
 console.log("hum " + connection);
 main(); //console.log(session)
 }
 });
 //fin événement connexion
 //événement authentification 
 zk.ev.on("creds.update", saveCreds);
 //fin événement authentification 
 //
 /** ************* */
 //fonctions utiles
 zk.downloadAndSaveMediaMessage = async (message, filename = '', attachExtension = true) => {
 let quoted = message.msg ? message.msg : message;
 let mime = (message.msg || message).mimetype || '';
 let messageType = message.mtype ? message.mtype.replace(/Message/gi, '') : mime.split('/')[0];
 const stream = await (0, baileys_1.downloadContentFromMessage)(quoted, messageType);
 let buffer = Buffer.from([]);
 for await (const chunk of stream) {
 buffer = Buffer.concat([buffer, chunk]);
 }
 let type = await FileType.fromBuffer(buffer);
 let trueFileName = './' + filename + '.' + type.ext;
 // save to file
 await fs.writeFileSync(trueFileName, buffer);
 return trueFileName;
 };


 zk.awaitForMessage = async (options = {}) =>{
 return new Promise((resolve, reject) => {
 if (typeof options !== 'object') reject(new Error('Options must be an object'));
 if (typeof options.sender !== 'string') reject(new Error('Sender must be a string'));
 if (typeof options.chatJid !== 'string') reject(new Error('ChatJid must be a string'));
 if (options.timeout && typeof options.timeout !== 'number') reject(new Error('Timeout must be a number'));
 if (options.filter && typeof options.filter !== 'function') reject(new Error('Filter must be a function'));
 
 const timeout = options?.timeout || undefined;
 const filter = options?.filter || (() => true);
 let interval = undefined
 
 /**
 * 
 * @param {{messages: Baileys.proto.IWebMessageInfo[], type: Baileys.MessageUpsertType}} data 
 */
 let listener = (data) => {
 let { type, messages } = data;
 if (type == "notify") {
 for (let message of messages) {
 const fromMe = message.key.fromMe;
 const chatId = message.key.remoteJid;
 const isGroup = chatId.endsWith('@g.us');
 const isStatus = chatId == 'status@broadcast';
 
 const sender = fromMe ? zk.user.id.replace(/:.*@/g, '@') : (isGroup || isStatus) ? message.key.participant.replace(/:.*@/g, '@') : chatId;
 if (sender == options.sender && chatId == options.chatJid && filter(message)) {
 zk.ev.off('messages.upsert', listener);
 clearTimeout(interval);
 resolve(message);
 }
 }
 }
 }
 zk.ev.on('messages.upsert', listener);
 if (timeout) {
 interval = setTimeout(() => {
 zk.ev.off('messages.upsert', listener);
 reject(new Error('Timeout'));
 }, timeout);
 }
 });
 }



 // fin fonctions utiles
 /** ************* */
 return zk;
 }
 let fichier = require.resolve(__filename);
 fs.watchFile(fichier, () => {
 fs.unwatchFile(fichier);
 console.log(`update ${__filename}`);
 delete require.cache[fichier];
 require(fichier);
 });
 main();
}, 5000);
